subhierarchies are used for different purposes. For example, the refs/heads/ hierarchy is used to represent local branches whereas the refs/tags/ hierarchy is used to represent local tags.. reflog A reflog shows the local "history" of a ref. In other words, it can tell you what the 3rd last revision in this repository was, and what was the current state in this repository, yesterday 9:14pm. See git-reflog[1] for details. refspec A "refspec" is used by fetch and push to describe the mapping between remote ref and local ref. See git-fetch[1] or git-push[1] for details. remote repository A repository which is used to track the same project but resides somewhere else. To communicate with remotes, see fetch or push . remote-tracking branch A ref that is used to follow changes from another repository . It typically looks like refs/remotes/foo/bar (indicating that it tracks a branch named bar in a remote named foo ), and matches the right-hand-side of a configured fetch refspec . A remote-tracking branch should not contain direct modifications or have local commits made to it. repository A collection of refs together with an object database containing all objects which are reachable from the refs, possibly accompanied by meta data from one or more porcelains . A repository can share an object database with other repositories via alternates mechanism . resolve The action of fixing up manually what a failed automatic merge left behind. revision Synonym for commit (the noun). rewind To throw away part of the development, i.e. to assign the head to an earlier revision . SCM Source code management (tool). SHA-1 "Secure Hash Algorithm 1"; a cryptographic hash function. In the context of Git used as a synonym for object name . shallow clone Mostly a synonym to shallow repository but the phrase makes it more explicit that it was created by running git clone --depth=... command. shallow repository A shallow repository has an incomplete history some of whose commits have parents cauterized away (in other words, Git is told to pretend that these commits do not have the parents, even though they are recorded in the commit object ). This is sometimes useful when you are interested only in the recent history of a project even though the real history recorded in the upstream is much larger. A shallow repository is created by giving the --depth option to git-clone[1] , and its history can be later deepened with git-fetch[1] . stash entry An object used to temporarily store the contents of a dirty working directory and the index for future reuse. submodule A repository that holds the history of a separate project inside another repository (the latter of which is called superproject ). superproject A repository that references repositories of other projects in its working tree as submodules . The superproject knows about the names of (but does not hold copies of) commit objects of the contained submodules. symref Symbolic reference: instead of containing the SHA-1 id itself, it is of the format ref: refs/some/thing and when referenced, it recursively dereferences to this reference. HEAD is a prime example of a symref. Symbolic references are manipulated with the git-symbolic-ref[1] command. tag A ref under refs/tags/ namespace that points to an object of an arbitrary type (typically a tag points to either a tag or a commit object ). In contrast to a head , a tag is not updated by the commit command. A Git tag has nothing to do with a Lisp tag (which would be called an object type in Gitâ€™s context). A tag is most typically used to mark a particular point in the commit ancestry chain . tag object An object containing a ref pointing to another object, which can contain a message just like a commit object . It can also contain a (PGP) signature, in which case it is called a "signed tag object". topic branch A regular Git branch that is used by a developer to identify a conceptual line of development. Since branches are very easy and inexpensive, it is often desirable to have several small branches that each contain very well defined concepts or small incremental yet related changes. trailer Key-value metadata. Trailers are optionally found at the end of a commit message. Might be called "footers" or "tags" in other communities. See git-interpret-trailers[1] . tree Either a working tree , or a tree object together with the dependent blob and tree objects (i.e. a stored representation of a working tree). tree object An object containing a list of file names and modes along with refs to the associated blob and/or tree objects. A tree is equivalent to a directory . tree-ish (also treeish) A tree object or an object that can be recursively dereferenced to a tree object. Dereferencing a commit object yields the tree object